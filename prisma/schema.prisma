// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id                      String    @id @default(uuid())
  email                   String    @unique
  createdAt               DateTime  @default(now())
  updatedAt               DateTime  @updatedAt
  posts                   Post[]
  orders                  Order[]
  dowloadVerifications    DownloadVerification[]
  
  @@unique([id, email]) // Define a composite unique constraint
}

// test model
model Post {
  id                      Int     @id @default(autoincrement())
  title                   String
  content                 String?
  published               Boolean @default(false)
  author                  User    @relation(fields: [authorId], references: [id])
  authorId                String 
}

model Product {
  id                      String    @id @default(uuid())
  name                    String
  priceInCents            Int
  filePath                String
  imagePath               String
  description             String
  isAvailableForPurchase  Boolean   @default(true)
  createdAt               DateTime  @default(now())
  updatedAt               DateTime  @updatedAt
  orders                  Order[]
  dowloadVerifications    DownloadVerification[]
}

model Order {
  id                      String @id @default(uuid())
  pricePaidInCents        Int
  createdAt               DateTime  @default(now())
  updatedAt               DateTime  @updatedAt
  userId                  String
  productId               String
  user                    User @relation(fields: [userId], references: [id], onDelete: Cascade)
  product                 Product @relation(fields: [productId], references: [id], onDelete: Restrict)
}
// Cascade: If we delete a user, delete all orders associated with that User.
// Restrict: If we try to delete a Product that has Orders associated with it, this will RESTRICT us from deleting that Product. So we can keep that data for the customers who ordered that product

model DownloadVerification {
  id                      String @id @default(uuid())
  expiresAt               DateTime
  createdAt               DateTime  @default(now())
  userId                  String
  productId               String
  user                    User @relation(fields: [userId], references: [id], onDelete: Cascade)
  product                 Product @relation(fields: [productId], references: [id], onDelete: Cascade)
}